openapi: 3.0.3
info:
  title: PinIt API
  version: 1.0.0
paths:
  /api/accounts/{username}/:
    get:
      operationId: accounts/<username>/
      description: Get the public details for account with username 'username'.
      parameters:
      - in: path
        name: username
        schema:
          type: string
        required: true
      tags:
      - Accounts
      security:
      - null
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Account username
                    example: "johndoe"
                  type:
                    type: string
                    description: Account type ("personal" or "business")
                    example: "personal"
                  display_name:
                    type: string
                    description: Account display name
                    example: "John Doe"
                  profile_picture_url:
                    type: string
                    format: uri
                    nullable: true
                    description: Account profile picture URL
                  background_picture_url:
                    type: string
                    format: uri
                    nullable: true
                    description: Account background picture URL
                  description:
                    type: string
                    nullable: true
                    description: Account description
        '404':
          description: No account found for this username
  /api/accounts/me/:
    get:
      operationId: accounts/me/
      description: Get the public details for the account owned by the authenticated
        user.
      tags:
      - Accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: Account username
                    example: "johndoe"
                  type:
                    type: string
                    description: Account type ("personal" or "business")
                    example: "personal"
                  initial:
                    type: string
                    description: Account initial
                    example: "J"
                  display_name:
                    type: string
                    description: Account display name
                    example: "John Doe"
                  profile_picture_url:
                    type: string
                    format: uri
                    nullable: true
                    description: Account profile picture URL
        '401':
          description: Failed authentication
  /api/create-pin/:
    post:
      operationId: create-pin/
      description: Create a new pin.
      tags:
      - Pins
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image_file:
                  type: string
                  format: uri
                title:
                  type: string
                description:
                  type: string
              required:
              - image_file
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  unique_id:
                    type: string
                    description: Unique ID of created pin
                    example: "837672678962535495"
                  image_url:
                    type: string
                    format: uri
                    description: URL of created pin's image
                  title:
                    type: string
                    description: Title of created pin
                    example: "Created pin title"
                  description:
                    type: string
                    description: Description of created pin
          maxLength: 200
        '401':
          description: Failed authentication
  /api/pin-suggestions/:
    get:
      operationId: pin-suggestions/
      description: Get the list of pin suggestions for the authenticated user.
      parameters:
      - name: page
        required: false
        in: query
        description: Page number. Default is 1.
        schema:
          type: integer
      tags:
      - Pins
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPinWithAuthorList'
          description: ''
  /api/pins/{unique_id}/:
    get:
      operationId: pins/<unique_id>/
      description: Returns the detailed information for pin with unique ID 'unique_id'
      parameters:
      - in: path
        name: unique_id
        schema:
          type: string
        required: true
      tags:
      - Pins
      security:
      - null
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinWithAuthor'
          description: ''
  /api/save-pin/{unique_id}/:
    post:
      operationId: save-pin/<unique_id>/
      description: Save pin with unique ID 'unique_id' in the account of the authenticated
        user.
      parameters:
      - in: path
        name: unique_id
        schema:
          type: string
        required: true
      tags:
      - Pins
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Pin successfully saved.
                content:
                  application/json:
                    example:
                      message: Pin already saved.
                      data:
                        pin:
                          id: example_id
                          title: Example Pin Title
                          description: An example description of the pin.
                        username: exampleUser
          description: ''
        '200':
          content:
            application/json:
              schema:
                description: Pin was already saved.
          description: ''
  /api/search/:
    get:
      operationId: search/
      description: Takes a search term and returns a list of relevant pins.
      parameters:
      - in: query
        name: q
        schema:
          type: string
        description: Search term
        required: true
      tags:
      - Search
      security:
      - null
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSuccessResponse'
          description: ''
  /api/search-suggestions/:
    get:
      operationId: search-suggestions/
      description: Takes a search term and returns a list of autocomplete suggestions
        for this term.
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search term
        required: true
      tags:
      - Search
      security:
      - null
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAutocompleteSuccessfulResponse'
          description: ''
  /api/signup/:
    post:
      operationId: signup/
      tags:
      - Sign-up and authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      security:
      - null
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupSuccessResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupUnauthorizedResponse'
          description: ''
  /api/token/obtain/:
    post:
      operationId: token/obtain/
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - Sign-up and authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainSuccessResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainUnauthorizedResponse'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token/refresh/
      tags:
      - Sign-up and authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshSuccessResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshUnauthorizedResponse'
          description: ''
components:
  schemas:
    AccountData:
      type: object
      properties:
        username:
          type: string
          description: Account username
          example: "johndoe"
        display_name:
          type: string
          description: Account display name
          example: "John Doe"
        profile_picture_url:
          type: string
          format: uri
          description: "Account profile picture URL"
    AccountSimpleRead:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 50
        initial:
          type: string
          nullable: true
          maxLength: 1
        display_name:
          type: string
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - display_name
      - type
      - username
    AccountWithPublicDetailsRead:
      type: object
      properties:
        username:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 50
        display_name:
          type: string
          readOnly: true
        profile_picture_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        background_picture_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
      required:
      - display_name
      - type
      - username
    AccountsSuccessResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountSimpleRead'
      required:
      - results
    CreatePinRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image_file:
          type: string
          format: uri
      required:
      - image_file
    PaginatedPinWithAuthorList:
      type: object
      properties:
        count:
          type: integer
          example: 50
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PinWithAuthor'
    PinBasicRead:
      type: object
      properties:
        unique_id:
          type: string
          readOnly: true
        image_url:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        title:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          nullable: true
      required:
      - unique_id
    PinWithAuthor:
      type: object
      properties:
        unique_id:
          type: string
          description: Pin unique ID
          example: "837672678962535495"
        image_url:
          type: string
          format: uri
        title:
          type: string
          description: Pin title
          example: "Pin title"
        description:
          type: string
          description: Pin description
        author:
          description: Pin author data
          allOf:
          - $ref: '#/components/schemas/AccountData'
    SearchAutocompleteSuccessfulResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: string
            description: Search suggestion
          description: List of search suggestions
      required:
      - results
    SearchSuccessResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/PinWithAuthor'
      required:
      - results
    SignupRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email
        password:
          type: string
          description: Password
        birthdate:
          type: string
          format: date
          description: Birth date
      required:
      - birthdate
      - email
      - password
    SignupSuccessResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
        refresh_token:
          type: string
          description: Refresh token
      required:
      - access_token
      - refresh_token
    SignupUnauthorizedResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SignupUnauthorizedResponseErrors'
          description: List of errors
      required:
      - errors
    SignupUnauthorizedResponseErrors:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/SignupUnauthorizedResponseErrorsCodeEnum'
          description: |-
            Error code

            * `invalid_email` - Invalid email
            * `invalid_password` - Invalid password
            * `invalid_birthdate` - Invalid birth date
            * `email_already_signed_up` - Email already signed up
      required:
      - code
    SignupUnauthorizedResponseErrorsCodeEnum:
      enum:
      - invalid_email
      - invalid_password
      - invalid_birthdate
      - email_already_signed_up
      type: string
      description: |-
        * `invalid_email` - Invalid email
        * `invalid_password` - Invalid password
        * `invalid_birthdate` - Invalid birth date
        * `email_already_signed_up` - Email already signed up
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenObtainSuccessResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Access token
        refresh_token:
          type: string
          description: Refresh token
        access_token_expiration_utc:
          type: string
          description: Access token expiration date (ISO 8601 format, UTC)
      required:
      - access_token
      - access_token_expiration_utc
      - refresh_token
    TokenObtainUnauthorizedResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TokenObtainUnauthorizedResponseErrors'
          description: List of errors
      required:
      - errors
    TokenObtainUnauthorizedResponseErrors:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/TokenObtainUnauthorizedResponseErrorsCodeEnum'
          description: |-
            Error code

            * `invalid_email` - Invalid email
            * `invalid_password` - Invalid password
      required:
      - code
    TokenObtainUnauthorizedResponseErrorsCodeEnum:
      enum:
      - invalid_email
      - invalid_password
      type: string
      description: |-
        * `invalid_email` - Invalid email
        * `invalid_password` - Invalid password
    TokenRefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string
          description: Refresh token
      required:
      - refresh_token
    TokenRefreshSuccessResponse:
      type: object
      properties:
        access_token:
          type: string
          description: Refreshed access token
        access_token_expiration_utc:
          type: string
          description: Refreshed access token expiration date (ISO 8601 format, UTC)
      required:
      - access_token
      - access_token_expiration_utc
    TokenRefreshUnauthorizedResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TokenRefreshUnauthorizedResponseErrors'
          description: List of errors
      required:
      - errors
    TokenRefreshUnauthorizedResponseErrors:
      type: object
      properties:
        code:
          allOf:
          - $ref: '#/components/schemas/TokenRefreshUnauthorizedResponseErrorsCodeEnum'
          description: |-
            Error code

            * `invalid_refresh_token` - Invalid refresh token
      required:
      - code
    TokenRefreshUnauthorizedResponseErrorsCodeEnum:
      enum:
      - invalid_refresh_token
      type: string
      description: '* `invalid_refresh_token` - Invalid refresh token'
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
